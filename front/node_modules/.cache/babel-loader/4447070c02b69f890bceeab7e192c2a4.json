{"ast":null,"code":"import _objectSpread from \"/usr/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as actionType from \"../actions/actionType\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\n\nconst error = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.USER_LOADING:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case actionType.USER_LOADED:\n      return _objectSpread({}, state, {\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      });\n\n    case actionType.LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return _objectSpread({}, state, {}, action.payload, {\n        isAuthenticated: true,\n        isLoading: false\n      });\n\n    case actionType.AUTH_ERROR:\n    case actionType.LOGOUT_SUCCESS:\n      localStorage.removeItem(\"token\");\n      return _objectSpread({}, state, {\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default error;","map":{"version":3,"sources":["/home/proff/kenny/leadv2/front/src/store/reducers/auth.jsx"],"names":["actionType","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","error","state","action","type","USER_LOADING","USER_LOADED","payload","LOGIN_SUCCESS","setItem","AUTH_ERROR","LOGOUT_SUCCESS","removeItem"],"mappings":";AAAA,OAAO,KAAKA,UAAZ,MAA4B,uBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,IAFE;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;;AAOA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,UAAU,CAACY,YAAhB;AACE,+BACKH,KADL;AAEEH,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAKN,UAAU,CAACa,WAAhB;AACE,+BACKJ,KADL;AAEEJ,QAAAA,eAAe,EAAE,IAFnB;AAGEC,QAAAA,SAAS,EAAE,KAHb;AAIEC,QAAAA,IAAI,EAAEG,MAAM,CAACI;AAJf;;AAOF,SAAKd,UAAU,CAACe,aAAhB;AACEZ,MAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BN,MAAM,CAACI,OAAP,CAAeZ,KAA7C;AACA,+BACKO,KADL,MAEKC,MAAM,CAACI,OAFZ;AAGET,QAAAA,eAAe,EAAE,IAHnB;AAIEC,QAAAA,SAAS,EAAE;AAJb;;AAMF,SAAKN,UAAU,CAACiB,UAAhB;AACA,SAAKjB,UAAU,CAACkB,cAAhB;AACEf,MAAAA,YAAY,CAACgB,UAAb,CAAwB,OAAxB;AACA,+BACKV,KADL;AAEEP,QAAAA,KAAK,EAAE,IAFT;AAGEK,QAAAA,IAAI,EAAE,IAHR;AAIEF,QAAAA,eAAe,EAAE,KAJnB;AAKEC,QAAAA,SAAS,EAAE;AALb;;AAOF;AACE,aAAOG,KAAP;AAjCJ;AAmCD,CApCD;;AAsCA,eAAeD,KAAf","sourcesContent":["import * as actionType from \"../actions/actionType\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null,\n};\n\nconst error = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case actionType.USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload,\n      };\n\n    case actionType.LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case actionType.AUTH_ERROR:\n    case actionType.LOGOUT_SUCCESS:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default error;\n"]},"metadata":{},"sourceType":"module"}