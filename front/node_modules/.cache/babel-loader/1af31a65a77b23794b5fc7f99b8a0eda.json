{"ast":null,"code":"import _objectSpread from \"/usr/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as actionType from \"../actions/actionType\";\nconst initialState = {\n  leads: []\n};\n\nconst leadsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.GET_LEADS:\n      return _objectSpread({}, state, {\n        leads: action.payload\n      });\n\n    case actionType.ADD_LEAD:\n      return _objectSpread({}, state, {\n        leads: [action.payload, ...state.leads]\n      });\n\n    case actionType.DELETE_LEAD:\n      const updatedArray = state.leads.filter(lead => lead.id !== action.payload);\n      return _objectSpread({}, state, {\n        leads: updatedArray\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default leadsReducer;","map":{"version":3,"sources":["/home/proff/kenny/leadv2/front/src/store/reducers/leads.jsx"],"names":["actionType","initialState","leads","leadsReducer","state","action","type","GET_LEADS","payload","ADD_LEAD","DELETE_LEAD","updatedArray","filter","lead","id"],"mappings":";AAAA,OAAO,KAAKA,UAAZ,MAA4B,uBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,UAAU,CAACO,SAAhB;AACE,+BACKH,KADL;AAEEF,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAFhB;;AAIF,SAAKR,UAAU,CAACS,QAAhB;AACE,+BACKL,KADL;AAEEF,QAAAA,KAAK,EAAE,CAACG,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACF,KAA1B;AAFT;;AAIF,SAAKF,UAAU,CAACU,WAAhB;AACE,YAAMC,YAAY,GAAGP,KAAK,CAACF,KAAN,CAAYU,MAAZ,CAClBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACG,OADV,CAArB;AAGA,+BACKJ,KADL;AAEEF,QAAAA,KAAK,EAAES;AAFT;;AAIF;AACE,aAAOP,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,YAAf","sourcesContent":["import * as actionType from \"../actions/actionType\";\n\nconst initialState = {\n  leads: [],\n};\n\nconst leadsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.GET_LEADS:\n      return {\n        ...state,\n        leads: action.payload,\n      };\n    case actionType.ADD_LEAD:\n      return {\n        ...state,\n        leads: [action.payload, ...state.leads],\n      };\n    case actionType.DELETE_LEAD:\n      const updatedArray = state.leads.filter(\n        (lead) => lead.id !== action.payload\n      );\n      return {\n        ...state,\n        leads: updatedArray,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default leadsReducer;\n"]},"metadata":{},"sourceType":"module"}