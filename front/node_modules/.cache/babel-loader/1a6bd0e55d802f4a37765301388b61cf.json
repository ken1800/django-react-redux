{"ast":null,"code":"var _jsxFileName = \"/home/proff/kenny/leadv2/front/src/components/layout/Header.jsx\";\nimport React, { Component } from \"react\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../store/actions/authActions\";\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      collapsed: false\n    };\n\n    this.setCollapsed = () => {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    };\n  }\n\n  render() {\n    const isNotAuth = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Register\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Login\")));\n    const isauth = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.props.logout,\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Logout\")), React.createElement(\"a\", {\n      role: \"button\",\n      \"aria-expanded\": \"false\",\n      \"aria-controls\": \"collapseExample\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.user));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      color: \"faded\",\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      href: \"/\",\n      className: \"mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"LeadManager\"), React.createElement(NavbarToggler, {\n      onClick: this.setCollapsed,\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      isOpen: this.state.collapsed,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.isAuthenticated ? isauth : isNotAuth))));\n  }\n\n}\n\nHeader.propTypes = {\n  auth: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {\n  logout\n})(Header);","map":{"version":3,"sources":["/home/proff/kenny/leadv2/front/src/components/layout/Header.jsx"],"names":["React","Component","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Button","Link","connect","PropTypes","logout","Header","state","collapsed","setCollapsed","setState","render","isNotAuth","isauth","props","user","isAuthenticated","propTypes","auth","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../store/actions/authActions\";\nclass Header extends Component {\n  state = {\n    collapsed: false,\n  };\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    logout: PropTypes.func.isRequired,\n  };\n\n  setCollapsed = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    const isNotAuth = (\n      <div>\n        <NavItem>\n          <Link to=\"/register\">Register</Link>\n        </NavItem>\n\n        <NavItem>\n          <Link to=\"/login\">Login</Link>\n        </NavItem>\n      </div>\n    );\n\n    const isauth = (\n      <div>\n        <NavItem>\n          <Button onClick={this.props.logout} color=\"danger\">\n            Logout\n          </Button>\n        </NavItem>\n\n        <a role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n          {this.props.user}\n        </a>\n      </div>\n    );\n\n    return (\n      <div>\n        <Navbar color=\"faded\" light>\n          <NavbarBrand href=\"/\" className=\"mr-auto\">\n            LeadManager\n          </NavbarBrand>\n          <NavbarToggler onClick={this.setCollapsed} className=\"mr-2\" />\n          <Collapse isOpen={this.state.collapsed} navbar>\n            <Nav navbar>{this.props.isAuthenticated ? isauth : isNotAuth}</Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps, { logout })(Header);\n"]},"metadata":{},"sourceType":"module"}