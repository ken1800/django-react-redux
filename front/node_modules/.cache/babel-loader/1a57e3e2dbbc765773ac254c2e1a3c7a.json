{"ast":null,"code":"import * as actionType from \"./actionType\";\nimport axios from \"axios\";\nimport { createMessage, returnErrors } from \"./messages\";\nconst url = \"http://localhost:8000/api/leads/\";\nexport const getLeads = () => dispatch => {\n  axios.get(url).then(res => {\n    dispatch({\n      type: actionType.GET_LEADS,\n      payload: res.data\n    });\n  }).catch(err => // dispatch(returnErrors(err.response.data, err.response.status))\n  console.log(err));\n};\nexport const deleteLead = id => dispatch => {\n  axios.delete(url + `${id}/`).then(res => {\n    dispatch({\n      type: actionType.DELETE_LEAD,\n      payload: id\n    });\n    dispatch(createMessage({\n      deleteLead: \"Lead Deleted\"\n    }));\n  }).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addLead = lead => dispatch => {\n  axios.post(url, lead).then(res => {\n    setTimeout(() => {\n      return dispatch({\n        type: actionType.ADD_LEAD,\n        payload: res.data\n      });\n    }, 2000);\n    return dispatch(createMessage({\n      addedLead: \"Lead Added..\"\n    }));\n  }).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};","map":{"version":3,"sources":["/home/proff/kenny/leadv2/front/src/store/actions/leadsActions.jsx"],"names":["actionType","axios","createMessage","returnErrors","url","getLeads","dispatch","get","then","res","type","GET_LEADS","payload","data","catch","err","console","log","deleteLead","id","delete","DELETE_LEAD","response","status","addLead","lead","post","setTimeout","ADD_LEAD","addedLead"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,cAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,YAA5C;AAEA,MAAMC,GAAG,GAAG,kCAAZ;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAD,IAAc;AAC1CL,EAAAA,KAAK,CACFM,GADH,CACOH,GADP,EAEGI,IAFH,CAESC,GAAD,IAAS;AACbH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEV,UAAU,CAACW,SADV;AAEPC,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPH,EAQGC,KARH,CAQUC,GAAD,IACL;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVJ;AAYD,CAbM;AAeP,OAAO,MAAMG,UAAU,GAAIC,EAAD,IAASb,QAAD,IAAc;AAC9CL,EAAAA,KAAK,CACFmB,MADH,CACUhB,GAAG,GAAI,GAAEe,EAAG,GADtB,EAEGX,IAFH,CAESC,GAAD,IAAS;AACbH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEV,UAAU,CAACqB,WADV;AAEPT,MAAAA,OAAO,EAAEO;AAFF,KAAD,CAAR;AAKAb,IAAAA,QAAQ,CAACJ,aAAa,CAAC;AAAEgB,MAAAA,UAAU,EAAE;AAAd,KAAD,CAAd,CAAR;AACD,GATH,EAUGJ,KAVH,CAUUC,GAAD,IACLT,QAAQ,CAACH,YAAY,CAACY,GAAG,CAACO,QAAJ,CAAaT,IAAd,EAAoBE,GAAG,CAACO,QAAJ,CAAaC,MAAjC,CAAb,CAXZ;AAaD,CAdM;AAgBP,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAWnB,QAAD,IAAc;AAC7CL,EAAAA,KAAK,CACFyB,IADH,CACQtB,GADR,EACaqB,IADb,EAEGjB,IAFH,CAESC,GAAD,IAAS;AACbkB,IAAAA,UAAU,CAAC,MAAM;AACf,aAAOrB,QAAQ,CAAC;AACdI,QAAAA,IAAI,EAAEV,UAAU,CAAC4B,QADH;AAEdhB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFC,OAAD,CAAf;AAID,KALS,EAKP,IALO,CAAV;AAMA,WAAOP,QAAQ,CAACJ,aAAa,CAAC;AAAE2B,MAAAA,SAAS,EAAE;AAAb,KAAD,CAAd,CAAf;AACD,GAVH,EAWGf,KAXH,CAWUC,GAAD,IACLT,QAAQ,CAACH,YAAY,CAACY,GAAG,CAACO,QAAJ,CAAaT,IAAd,EAAoBE,GAAG,CAACO,QAAJ,CAAaC,MAAjC,CAAb,CAZZ;AAcD,CAfM","sourcesContent":["import * as actionType from \"./actionType\";\nimport axios from \"axios\";\nimport { createMessage, returnErrors } from \"./messages\";\n\nconst url = \"http://localhost:8000/api/leads/\";\n\nexport const getLeads = () => (dispatch) => {\n  axios\n    .get(url)\n    .then((res) => {\n      dispatch({\n        type: actionType.GET_LEADS,\n        payload: res.data,\n      });\n    })\n    .catch((err) =>\n      // dispatch(returnErrors(err.response.data, err.response.status))\n      console.log(err)\n    );\n};\n\nexport const deleteLead = (id) => (dispatch) => {\n  axios\n    .delete(url + `${id}/`)\n    .then((res) => {\n      dispatch({\n        type: actionType.DELETE_LEAD,\n        payload: id,\n      });\n\n      dispatch(createMessage({ deleteLead: \"Lead Deleted\" }));\n    })\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const addLead = (lead) => (dispatch) => {\n  axios\n    .post(url, lead)\n    .then((res) => {\n      setTimeout(() => {\n        return dispatch({\n          type: actionType.ADD_LEAD,\n          payload: res.data,\n        });\n      }, 2000);\n      return dispatch(createMessage({ addedLead: \"Lead Added..\" }));\n    })\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n"]},"metadata":{},"sourceType":"module"}