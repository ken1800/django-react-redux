{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.Redux = global.Redux || {});\n})(this, function (exports) {\n  'use strict';\n  /** Detect free variable `global` from Node.js. */\n\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n  /** Detect free variable `self`. */\n\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n  /** Used as a reference to the global object. */\n\n  var root = freeGlobal || freeSelf || Function('return this')();\n  /** Built-in value references. */\n\n  var Symbol = root.Symbol;\n  /** Used for built-in method references. */\n\n  var objectProto$1 = Object.prototype;\n  /** Used to check objects for own properties. */\n\n  var hasOwnProperty$1 = objectProto$1.hasOwnProperty;\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n\n  var nativeObjectToString = objectProto$1.toString;\n  /** Built-in value references. */\n\n  var symToStringTag$1 = Symbol ? Symbol.toStringTag : undefined;\n  /**\n   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the raw `toStringTag`.\n   */\n\n  function getRawTag(value) {\n    var isOwn = hasOwnProperty$1.call(value, symToStringTag$1),\n        tag = value[symToStringTag$1];\n\n    try {\n      value[symToStringTag$1] = undefined;\n      var unmasked = true;\n    } catch (e) {}\n\n    var result = nativeObjectToString.call(value);\n\n    if (unmasked) {\n      if (isOwn) {\n        value[symToStringTag$1] = tag;\n      } else {\n        delete value[symToStringTag$1];\n      }\n    }\n\n    return result;\n  }\n  /** Used for built-in method references. */\n\n\n  var objectProto$2 = Object.prototype;\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n\n  var nativeObjectToString$1 = objectProto$2.toString;\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n\n  function objectToString(value) {\n    return nativeObjectToString$1.call(value);\n  }\n  /** `Object#toString` result references. */\n\n\n  var nullTag = '[object Null]';\n  var undefinedTag = '[object Undefined]';\n  /** Built-in value references. */\n\n  var symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n\n  function baseGetTag(value) {\n    if (value == null) {\n      return value === undefined ? undefinedTag : nullTag;\n    }\n\n    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n  }\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n\n\n  function overArg(func, transform) {\n    return function (arg) {\n      return func(transform(arg));\n    };\n  }\n  /** Built-in value references. */\n\n\n  var getPrototype = overArg(Object.getPrototypeOf, Object);\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n\n  function isObjectLike(value) {\n    return value != null && typeof value == 'object';\n  }\n  /** `Object#toString` result references. */\n\n\n  var objectTag = '[object Object]';\n  /** Used for built-in method references. */\n\n  var funcProto = Function.prototype;\n  var objectProto = Object.prototype;\n  /** Used to resolve the decompiled source of functions. */\n\n  var funcToString = funcProto.toString;\n  /** Used to check objects for own properties. */\n\n  var hasOwnProperty = objectProto.hasOwnProperty;\n  /** Used to infer the `Object` constructor. */\n\n  var objectCtorString = funcToString.call(Object);\n  /**\n   * Checks if `value` is a plain object, that is, an object created by the\n   * `Object` constructor or one with a `[[Prototype]]` of `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.8.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * _.isPlainObject(new Foo);\n   * // => false\n   *\n   * _.isPlainObject([1, 2, 3]);\n   * // => false\n   *\n   * _.isPlainObject({ 'x': 0, 'y': 0 });\n   * // => true\n   *\n   * _.isPlainObject(Object.create(null));\n   * // => true\n   */\n\n  function isPlainObject(value) {\n    if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n      return false;\n    }\n\n    var proto = getPrototype(value);\n\n    if (proto === null) {\n      return true;\n    }\n\n    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n  }\n\n  function symbolObservablePonyfill(root) {\n    var result;\n    var Symbol = root.Symbol;\n\n    if (typeof Symbol === 'function') {\n      if (Symbol.observable) {\n        result = Symbol.observable;\n      } else {\n        result = Symbol('observable');\n        Symbol.observable = result;\n      }\n    } else {\n      result = '@@observable';\n    }\n\n    return result;\n  }\n  /* global window */\n\n\n  var root$2;\n\n  if (typeof self !== 'undefined') {\n    root$2 = self;\n  } else if (typeof window !== 'undefined') {\n    root$2 = window;\n  } else if (typeof global !== 'undefined') {\n    root$2 = global;\n  } else if (typeof module !== 'undefined') {\n    root$2 = module;\n  } else {\n    root$2 = Function('return this')();\n  }\n\n  var result = symbolObservablePonyfill(root$2);\n  /**\n   * These are private action types reserved by Redux.\n   * For any unknown actions, you must return the current state.\n   * If the current state is undefined, you must return the initial state.\n   * Do not reference these action types directly in your code.\n   */\n\n  var ActionTypes = {\n    INIT: '@@redux/INIT'\n    /**\n     * Creates a Redux store that holds the state tree.\n     * The only way to change the data in the store is to call `dispatch()` on it.\n     *\n     * There should only be a single store in your app. To specify how different\n     * parts of the state tree respond to actions, you may combine several reducers\n     * into a single reducer function by using `combineReducers`.\n     *\n     * @param {Function} reducer A function that returns the next state tree, given\n     * the current state tree and the action to handle.\n     *\n     * @param {any} [preloadedState] The initial state. You may optionally specify it\n     * to hydrate the state from the server in universal apps, or to restore a\n     * previously serialized user session.\n     * If you use `combineReducers` to produce the root reducer function, this must be\n     * an object with the same shape as `combineReducers` keys.\n     *\n     * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n     * to enhance the store with third-party capabilities such as middleware,\n     * time travel, persistence, etc. The only store enhancer that ships with Redux\n     * is `applyMiddleware()`.\n     *\n     * @returns {Store} A Redux store that lets you read the state, dispatch actions\n     * and subscribe to changes.\n     */\n\n  };\n\n  function createStore(reducer, preloadedState, enhancer) {\n    var _ref2;\n\n    if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n      enhancer = preloadedState;\n      preloadedState = undefined;\n    }\n\n    if (typeof enhancer !== 'undefined') {\n      if (typeof enhancer !== 'function') {\n        throw new Error('Expected the enhancer to be a function.');\n      }\n\n      return enhancer(createStore)(reducer, preloadedState);\n    }\n\n    if (typeof reducer !== 'function') {\n      throw new Error('Expected the reducer to be a function.');\n    }\n\n    var currentReducer = reducer;\n    var currentState = preloadedState;\n    var currentListeners = [];\n    var nextListeners = currentListeners;\n    var isDispatching = false;\n\n    function ensureCanMutateNextListeners() {\n      if (nextListeners === currentListeners) {\n        nextListeners = currentListeners.slice();\n      }\n    }\n    /**\n     * Reads the state tree managed by the store.\n     *\n     * @returns {any} The current state tree of your application.\n     */\n\n\n    function getState() {\n      return currentState;\n    }\n    /**\n     * Adds a change listener. It will be called any time an action is dispatched,\n     * and some part of the state tree may potentially have changed. You may then\n     * call `getState()` to read the current state tree inside the callback.\n     *\n     * You may call `dispatch()` from a change listener, with the following\n     * caveats:\n     *\n     * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n     * If you subscribe or unsubscribe while the listeners are being invoked, this\n     * will not have any effect on the `dispatch()` that is currently in progress.\n     * However, the next `dispatch()` call, whether nested or not, will use a more\n     * recent snapshot of the subscription list.\n     *\n     * 2. The listener should not expect to see all state changes, as the state\n     * might have been updated multiple times during a nested `dispatch()` before\n     * the listener is called. It is, however, guaranteed that all subscribers\n     * registered before the `dispatch()` started will be called with the latest\n     * state by the time it exits.\n     *\n     * @param {Function} listener A callback to be invoked on every dispatch.\n     * @returns {Function} A function to remove this change listener.\n     */\n\n\n    function subscribe(listener) {\n      if (typeof listener !== 'function') {\n        throw new Error('Expected listener to be a function.');\n      }\n\n      var isSubscribed = true;\n      ensureCanMutateNextListeners();\n      nextListeners.push(listener);\n      return function unsubscribe() {\n        if (!isSubscribed) {\n          return;\n        }\n\n        isSubscribed = false;\n        ensureCanMutateNextListeners();\n        var index = nextListeners.indexOf(listener);\n        nextListeners.splice(index, 1);\n      };\n    }\n    /**\n     * Dispatches an action. It is the only way to trigger a state change.\n     *\n     * The `reducer` function, used to create the store, will be called with the\n     * current state tree and the given `action`. Its return value will\n     * be considered the **next** state of the tree, and the change listeners\n     * will be notified.\n     *\n     * The base implementation only supports plain object actions. If you want to\n     * dispatch a Promise, an Observable, a thunk, or something else, you need to\n     * wrap your store creating function into the corresponding middleware. For\n     * example, see the documentation for the `redux-thunk` package. Even the\n     * middleware will eventually dispatch plain object actions using this method.\n     *\n     * @param {Object} action A plain object representing “what changed”. It is\n     * a good idea to keep actions serializable so you can record and replay user\n     * sessions, or use the time travelling `redux-devtools`. An action must have\n     * a `type` property which may not be `undefined`. It is a good idea to use\n     * string constants for action types.\n     *\n     * @returns {Object} For convenience, the same action object you dispatched.\n     *\n     * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n     * return something else (for example, a Promise you can await).\n     */\n\n\n    function dispatch(action) {\n      if (!isPlainObject(action)) {\n        throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n      }\n\n      if (typeof action.type === 'undefined') {\n        throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n      }\n\n      if (isDispatching) {\n        throw new Error('Reducers may not dispatch actions.');\n      }\n\n      try {\n        isDispatching = true;\n        currentState = currentReducer(currentState, action);\n      } finally {\n        isDispatching = false;\n      }\n\n      var listeners = currentListeners = nextListeners;\n\n      for (var i = 0; i < listeners.length; i++) {\n        var listener = listeners[i];\n        listener();\n      }\n\n      return action;\n    }\n    /**\n     * Replaces the reducer currently used by the store to calculate the state.\n     *\n     * You might need this if your app implements code splitting and you want to\n     * load some of the reducers dynamically. You might also need this if you\n     * implement a hot reloading mechanism for Redux.\n     *\n     * @param {Function} nextReducer The reducer for the store to use instead.\n     * @returns {void}\n     */\n\n\n    function replaceReducer(nextReducer) {\n      if (typeof nextReducer !== 'function') {\n        throw new Error('Expected the nextReducer to be a function.');\n      }\n\n      currentReducer = nextReducer;\n      dispatch({\n        type: ActionTypes.INIT\n      });\n    }\n    /**\n     * Interoperability point for observable/reactive libraries.\n     * @returns {observable} A minimal observable of state changes.\n     * For more information, see the observable proposal:\n     * https://github.com/tc39/proposal-observable\n     */\n\n\n    function observable() {\n      var _ref;\n\n      var outerSubscribe = subscribe;\n      return _ref = {\n        /**\n         * The minimal observable subscription method.\n         * @param {Object} observer Any object that can be used as an observer.\n         * The observer object should have a `next` method.\n         * @returns {subscription} An object with an `unsubscribe` method that can\n         * be used to unsubscribe the observable from the store, and prevent further\n         * emission of values from the observable.\n         */\n        subscribe: function subscribe(observer) {\n          if (typeof observer !== 'object') {\n            throw new TypeError('Expected the observer to be an object.');\n          }\n\n          function observeState() {\n            if (observer.next) {\n              observer.next(getState());\n            }\n          }\n\n          observeState();\n          var unsubscribe = outerSubscribe(observeState);\n          return {\n            unsubscribe: unsubscribe\n          };\n        }\n      }, _ref[result] = function () {\n        return this;\n      }, _ref;\n    } // When a store is created, an \"INIT\" action is dispatched so that every\n    // reducer returns their initial state. This effectively populates\n    // the initial state tree.\n\n\n    dispatch({\n      type: ActionTypes.INIT\n    });\n    return _ref2 = {\n      dispatch: dispatch,\n      subscribe: subscribe,\n      getState: getState,\n      replaceReducer: replaceReducer\n    }, _ref2[result] = observable, _ref2;\n  }\n  /**\n   * Prints a warning in the console if it exists.\n   *\n   * @param {String} message The warning message.\n   * @returns {void}\n   */\n\n\n  function warning(message) {\n    /* eslint-disable no-console */\n    if (typeof console !== 'undefined' && typeof console.error === 'function') {\n      console.error(message);\n    }\n    /* eslint-enable no-console */\n\n\n    try {\n      // This error was thrown as a convenience so that if you enable\n      // \"break on all exceptions\" in your console,\n      // it would pause the execution at this line.\n      throw new Error(message);\n      /* eslint-disable no-empty */\n    } catch (e) {}\n    /* eslint-enable no-empty */\n\n  }\n\n  function getUndefinedStateErrorMessage(key, action) {\n    var actionType = action && action.type;\n    var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n    return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n  }\n\n  function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n    var reducerKeys = Object.keys(reducers);\n    var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n    if (reducerKeys.length === 0) {\n      return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n    }\n\n    if (!isPlainObject(inputState)) {\n      return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n    }\n\n    var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n      return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n    });\n    unexpectedKeys.forEach(function (key) {\n      unexpectedKeyCache[key] = true;\n    });\n\n    if (unexpectedKeys.length > 0) {\n      return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n    }\n  }\n\n  function assertReducerShape(reducers) {\n    Object.keys(reducers).forEach(function (key) {\n      var reducer = reducers[key];\n      var initialState = reducer(undefined, {\n        type: ActionTypes.INIT\n      });\n\n      if (typeof initialState === 'undefined') {\n        throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n      }\n\n      var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n\n      if (typeof reducer(undefined, {\n        type: type\n      }) === 'undefined') {\n        throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n      }\n    });\n  }\n  /**\n   * Turns an object whose values are different reducer functions, into a single\n   * reducer function. It will call every child reducer, and gather their results\n   * into a single state object, whose keys correspond to the keys of the passed\n   * reducer functions.\n   *\n   * @param {Object} reducers An object whose values correspond to different\n   * reducer functions that need to be combined into one. One handy way to obtain\n   * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n   * undefined for any action. Instead, they should return their initial state\n   * if the state passed to them was undefined, and the current state for any\n   * unrecognized action.\n   *\n   * @returns {Function} A reducer function that invokes every reducer inside the\n   * passed object, and builds a state object with the same shape.\n   */\n\n\n  function combineReducers(reducers) {\n    var reducerKeys = Object.keys(reducers);\n    var finalReducers = {};\n\n    for (var i = 0; i < reducerKeys.length; i++) {\n      var key = reducerKeys[i];\n      {\n        if (typeof reducers[key] === 'undefined') {\n          warning('No reducer provided for key \"' + key + '\"');\n        }\n      }\n\n      if (typeof reducers[key] === 'function') {\n        finalReducers[key] = reducers[key];\n      }\n    }\n\n    var finalReducerKeys = Object.keys(finalReducers);\n    var unexpectedKeyCache = void 0;\n    {\n      unexpectedKeyCache = {};\n    }\n    var shapeAssertionError = void 0;\n\n    try {\n      assertReducerShape(finalReducers);\n    } catch (e) {\n      shapeAssertionError = e;\n    }\n\n    return function combination() {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var action = arguments[1];\n\n      if (shapeAssertionError) {\n        throw shapeAssertionError;\n      }\n\n      {\n        var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n        if (warningMessage) {\n          warning(warningMessage);\n        }\n      }\n      var hasChanged = false;\n      var nextState = {};\n\n      for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n        var _key = finalReducerKeys[_i];\n        var reducer = finalReducers[_key];\n        var previousStateForKey = state[_key];\n        var nextStateForKey = reducer(previousStateForKey, action);\n\n        if (typeof nextStateForKey === 'undefined') {\n          var errorMessage = getUndefinedStateErrorMessage(_key, action);\n          throw new Error(errorMessage);\n        }\n\n        nextState[_key] = nextStateForKey;\n        hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n      }\n\n      return hasChanged ? nextState : state;\n    };\n  }\n\n  function bindActionCreator(actionCreator, dispatch) {\n    return function () {\n      return dispatch(actionCreator.apply(undefined, arguments));\n    };\n  }\n  /**\n   * Turns an object whose values are action creators, into an object with the\n   * same keys, but with every function wrapped into a `dispatch` call so they\n   * may be invoked directly. This is just a convenience method, as you can call\n   * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n   *\n   * For convenience, you can also pass a single function as the first argument,\n   * and get a function in return.\n   *\n   * @param {Function|Object} actionCreators An object whose values are action\n   * creator functions. One handy way to obtain it is to use ES6 `import * as`\n   * syntax. You may also pass a single function.\n   *\n   * @param {Function} dispatch The `dispatch` function available on your Redux\n   * store.\n   *\n   * @returns {Function|Object} The object mimicking the original object, but with\n   * every action creator wrapped into the `dispatch` call. If you passed a\n   * function as `actionCreators`, the return value will also be a single\n   * function.\n   */\n\n\n  function bindActionCreators(actionCreators, dispatch) {\n    if (typeof actionCreators === 'function') {\n      return bindActionCreator(actionCreators, dispatch);\n    }\n\n    if (typeof actionCreators !== 'object' || actionCreators === null) {\n      throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n    }\n\n    var keys = Object.keys(actionCreators);\n    var boundActionCreators = {};\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var actionCreator = actionCreators[key];\n\n      if (typeof actionCreator === 'function') {\n        boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n      }\n    }\n\n    return boundActionCreators;\n  }\n  /**\n   * Composes single-argument functions from right to left. The rightmost\n   * function can take multiple arguments as it provides the signature for\n   * the resulting composite function.\n   *\n   * @param {...Function} funcs The functions to compose.\n   * @returns {Function} A function obtained by composing the argument functions\n   * from right to left. For example, compose(f, g, h) is identical to doing\n   * (...args) => f(g(h(...args))).\n   */\n\n\n  function compose() {\n    for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n      funcs[_key] = arguments[_key];\n    }\n\n    if (funcs.length === 0) {\n      return function (arg) {\n        return arg;\n      };\n    }\n\n    if (funcs.length === 1) {\n      return funcs[0];\n    }\n\n    return funcs.reduce(function (a, b) {\n      return function () {\n        return a(b.apply(undefined, arguments));\n      };\n    });\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  /**\n   * Creates a store enhancer that applies middleware to the dispatch method\n   * of the Redux store. This is handy for a variety of tasks, such as expressing\n   * asynchronous actions in a concise manner, or logging every action payload.\n   *\n   * See `redux-thunk` package as an example of the Redux middleware.\n   *\n   * Because middleware is potentially asynchronous, this should be the first\n   * store enhancer in the composition chain.\n   *\n   * Note that each middleware will be given the `dispatch` and `getState` functions\n   * as named arguments.\n   *\n   * @param {...Function} middlewares The middleware chain to be applied.\n   * @returns {Function} A store enhancer applying the middleware.\n   */\n\n\n  function applyMiddleware() {\n    for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n      middlewares[_key] = arguments[_key];\n    }\n\n    return function (createStore) {\n      return function (reducer, preloadedState, enhancer) {\n        var store = createStore(reducer, preloadedState, enhancer);\n        var _dispatch = store.dispatch;\n        var chain = [];\n        var middlewareAPI = {\n          getState: store.getState,\n          dispatch: function dispatch(action) {\n            return _dispatch(action);\n          }\n        };\n        chain = middlewares.map(function (middleware) {\n          return middleware(middlewareAPI);\n        });\n        _dispatch = compose.apply(undefined, chain)(store.dispatch);\n        return _extends({}, store, {\n          dispatch: _dispatch\n        });\n      };\n    };\n  }\n  /*\n  * This is a dummy function to check if the function name has been altered by minification.\n  * If the function has been minified and NODE_ENV !== 'production', warn the user.\n  */\n\n\n  function isCrushed() {}\n\n  if (\"development\" !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n    warning('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n  }\n\n  exports.createStore = createStore;\n  exports.combineReducers = combineReducers;\n  exports.bindActionCreators = bindActionCreators;\n  exports.applyMiddleware = applyMiddleware;\n  exports.compose = compose;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["/home/proff/kenny/leadv2/front/node_modules/redux.js"],"names":["global","factory","exports","module","define","amd","Redux","freeGlobal","Object","freeSelf","self","root","Function","Symbol","objectProto$1","prototype","hasOwnProperty$1","hasOwnProperty","nativeObjectToString","toString","symToStringTag$1","toStringTag","undefined","getRawTag","value","isOwn","call","tag","unmasked","e","result","objectProto$2","nativeObjectToString$1","objectToString","nullTag","undefinedTag","symToStringTag","baseGetTag","overArg","func","transform","arg","getPrototype","getPrototypeOf","isObjectLike","objectTag","funcProto","objectProto","funcToString","objectCtorString","isPlainObject","proto","Ctor","constructor","symbolObservablePonyfill","observable","root$2","window","ActionTypes","INIT","createStore","reducer","preloadedState","enhancer","_ref2","Error","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","getState","subscribe","listener","isSubscribed","push","unsubscribe","index","indexOf","splice","dispatch","action","type","listeners","i","length","replaceReducer","nextReducer","_ref","outerSubscribe","observer","TypeError","observeState","next","warning","message","console","error","getUndefinedStateErrorMessage","key","actionType","actionName","getUnexpectedStateShapeWarningMessage","inputState","reducers","unexpectedKeyCache","reducerKeys","keys","argumentName","match","join","unexpectedKeys","filter","forEach","assertReducerShape","initialState","Math","random","substring","split","combineReducers","finalReducers","finalReducerKeys","shapeAssertionError","combination","state","arguments","warningMessage","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","apply","bindActionCreators","actionCreators","boundActionCreators","compose","_len","funcs","Array","reduce","a","b","_extends","assign","target","source","applyMiddleware","middlewares","store","_dispatch","chain","middlewareAPI","map","middleware","isCrushed","name","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.Redux = global.Redux || {})));\n}(this, (function (exports) { 'use strict';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$1.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto$1.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty$1.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$2 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$2.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype;\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n}\n\n/* global window */\nvar root$2;\n\nif (typeof self !== 'undefined') {\n  root$2 = self;\n} else if (typeof window !== 'undefined') {\n  root$2 = window;\n} else if (typeof global !== 'undefined') {\n  root$2 = global;\n} else if (typeof module !== 'undefined') {\n  root$2 = module;\n} else {\n  root$2 = Function('return this')();\n}\n\nvar result = symbolObservablePonyfill(root$2);\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = {\n  INIT: '@@redux/INIT'\n\n  /**\n   * Creates a Redux store that holds the state tree.\n   * The only way to change the data in the store is to call `dispatch()` on it.\n   *\n   * There should only be a single store in your app. To specify how different\n   * parts of the state tree respond to actions, you may combine several reducers\n   * into a single reducer function by using `combineReducers`.\n   *\n   * @param {Function} reducer A function that returns the next state tree, given\n   * the current state tree and the action to handle.\n   *\n   * @param {any} [preloadedState] The initial state. You may optionally specify it\n   * to hydrate the state from the server in universal apps, or to restore a\n   * previously serialized user session.\n   * If you use `combineReducers` to produce the root reducer function, this must be\n   * an object with the same shape as `combineReducers` keys.\n   *\n   * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n   * to enhance the store with third-party capabilities such as middleware,\n   * time travel, persistence, etc. The only store enhancer that ships with Redux\n   * is `applyMiddleware()`.\n   *\n   * @returns {Store} A Redux store that lets you read the state, dispatch actions\n   * and subscribe to changes.\n   */\n};function createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[result] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[result] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    {\n      if (typeof reducers[key] === 'undefined') {\n        warning('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (\"development\" !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexports.createStore = createStore;\nexports.combineReducers = combineReducers;\nexports.bindActionCreators = bindActionCreators;\nexports.applyMiddleware = applyMiddleware;\nexports.compose = compose;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]},"metadata":{},"sourceType":"script"}