{"ast":null,"code":"var _jsxFileName = \"/home/proff/kenny/leadv2/front/src/components/accounts/Register.jsx\";\nimport React, { Component } from \"react\";\nimport { Container, Card, Input, Label, Form, FormGroup, CardBody, CardHeader, CardGroup, Button } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../store/actions/authActions\";\nimport { createMessage } from \"../../store/actions/messages\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\"\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            username = _this$state.username,\n            email = _this$state.email,\n            password = _this$state.password,\n            password2 = _this$state.password2;\n\n      if (password !== password2) {\n        this.props.createMessage({\n          passwordNotMatch: \"Passwords do not match\"\n        });\n      } else {\n        const newUser = {\n          username,\n          password,\n          email\n        };\n        this.props.register(newUser);\n      }\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          username = _this$state2.username,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          password2 = _this$state2.password2;\n\n    if (this.props.isAuthenticated) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(CardGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Register\"), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Input, {\n      name: \"username\",\n      type: \"text\",\n      onChange: this.onChange,\n      value: username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      name: \"email\",\n      type: \"email\",\n      onChange: this.onChange,\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      name: \"password\",\n      type: \"password\",\n      onChange: this.onChange,\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(Input, {\n      name: \"password2\",\n      type: \"password\",\n      onChange: this.onChange,\n      value: password2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Already have an account? \", React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Login\"))))))));\n  }\n\n}\n\nRegister.propTypes = {\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  createMessage\n})(Register);","map":{"version":3,"sources":["/home/proff/kenny/leadv2/front/src/components/accounts/Register.jsx"],"names":["React","Component","Container","Card","Input","Label","Form","FormGroup","CardBody","CardHeader","CardGroup","Button","PropTypes","connect","register","createMessage","Link","Redirect","Register","state","username","email","password","password2","onSubmit","e","preventDefault","props","passwordNotMatch","newUser","onChange","setState","target","name","value","render","isAuthenticated","propTypes","func","isRequired","bool","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Container,\n  Card,\n  Input,\n  Label,\n  Form,\n  FormGroup,\n  CardBody,\n  CardHeader,\n  CardGroup,\n  Button,\n} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../store/actions/authActions\";\nimport { createMessage } from \"../../store/actions/messages\";\n\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass Register extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  };\n  static propTypes = {\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { username, email, password, password2 } = this.state;\n    if (password !== password2) {\n      this.props.createMessage({ passwordNotMatch: \"Passwords do not match\" });\n    } else {\n      const newUser = {\n        username,\n        password,\n        email,\n      };\n      this.props.register(newUser);\n    }\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { username, email, password, password2 } = this.state;\n    if (this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <Container>\n          <CardGroup>\n            <Card>\n              <CardHeader>Register</CardHeader>\n              <CardBody>\n                <Form onSubmit={this.onSubmit}>\n                  <FormGroup>\n                    <Label>Username</Label>\n                    <Input\n                      name=\"username\"\n                      type=\"text\"\n                      onChange={this.onChange}\n                      value={username}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Email</Label>\n                    <Input\n                      name=\"email\"\n                      type=\"email\"\n                      onChange={this.onChange}\n                      value={email}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Password</Label>\n                    <Input\n                      name=\"password\"\n                      type=\"password\"\n                      onChange={this.onChange}\n                      value={password}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Confirm Password</Label>\n                    <Input\n                      name=\"password2\"\n                      type=\"password\"\n                      onChange={this.onChange}\n                      value={password2}\n                    />\n                  </FormGroup>\n                  <Button type=\"submit\" color=\"success\">\n                    Register\n                  </Button>\n                  <br />\n                  <br />\n                  <p>\n                    Already have an account? <Link to=\"/login\">Login</Link>\n                  </p>\n                </Form>\n              </CardBody>\n            </Card>\n          </CardGroup>\n        </Container>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register, createMessage })(Register);\n"]},"metadata":{},"sourceType":"module"}