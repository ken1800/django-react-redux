{"ast":null,"code":"import * as actionType from \"./actionType\";\nimport { returnErrors } from \"./messages\";\nimport axios from \"axios\";\nexport const loadUser = () => (dispatch, getState) => {\n  //user loading\n  dispatch({\n    type: actionType.USER_LOADING\n  }); //get token from the state or the local state\n\n  const token = getState().auth.token; //headers\n\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }; //if token, add headers config\n\n  if (token) {\n    config.headers[\"Authorization\"] = `Token ${token}`;\n  }\n\n  axios.get(\"http://localhost:8000/api/auth/user\", config).then(res => {\n    dispatch({\n      type: actionType.USER_LOADED,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status));\n    dispatch({\n      type: actionType.AUTH_ERROR\n    });\n  });\n};","map":{"version":3,"sources":["/home/proff/kenny/leadv2/front/src/store/actions/authActions.jsx"],"names":["actionType","returnErrors","axios","loadUser","dispatch","getState","type","USER_LOADING","token","auth","config","headers","get","then","res","USER_LOADED","payload","data","catch","err","response","status","AUTH_ERROR"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,cAA5B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACpD;AACAD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEN,UAAU,CAACO;AAAnB,GAAD,CAAR,CAFoD,CAIpD;;AACA,QAAMC,KAAK,GAAGH,QAAQ,GAAGI,IAAX,CAAgBD,KAA9B,CALoD,CAOpD;;AACA,QAAME,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf,CARoD,CAcpD;;AACA,MAAIH,KAAJ,EAAW;AACTE,IAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAmC,SAAQH,KAAM,EAAjD;AACD;;AAEDN,EAAAA,KAAK,CACFU,GADH,CACO,qCADP,EAC8CF,MAD9C,EAEGG,IAFH,CAESC,GAAD,IAAS;AACbV,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN,UAAU,CAACe,WADV;AAEPC,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdf,IAAAA,QAAQ,CAACH,YAAY,CAACkB,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAR;AACAjB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN,UAAU,CAACsB;AADV,KAAD,CAAR;AAGD,GAbH;AAcD,CAjCM","sourcesContent":["import * as actionType from \"./actionType\";\nimport { returnErrors } from \"./messages\";\n\nimport axios from \"axios\";\n\nexport const loadUser = () => (dispatch, getState) => {\n  //user loading\n  dispatch({ type: actionType.USER_LOADING });\n\n  //get token from the state or the local state\n  const token = getState().auth.token;\n\n  //headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  };\n\n  //if token, add headers config\n  if (token) {\n    config.headers[\"Authorization\"] = `Token ${token}`;\n  }\n\n  axios\n    .get(\"http://localhost:8000/api/auth/user\", config)\n    .then((res) => {\n      dispatch({\n        type: actionType.USER_LOADED,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: actionType.AUTH_ERROR,\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}